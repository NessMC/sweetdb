!function(t){var e={};function i(s){if(e[s])return e[s].exports;var n=e[s]={i:s,l:!1,exports:{}};return t[s].call(n.exports,n,n.exports,i),n.l=!0,n.exports}i.m=t,i.c=e,i.d=function(t,e,s){i.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:s})},i.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i.t=function(t,e){if(1&e&&(t=i(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var s=Object.create(null);if(i.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var n in t)i.d(s,n,function(e){return t[e]}.bind(null,n));return s},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,"a",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p="",i(i.s=1)}([function(t,e){t.exports=require("fs")},function(t,e,i){"use strict";i.r(e);var s=i(0),n=function(){function t(t){this.file=t,this.file=t+".sweet"}return t.prototype.read=function(t){s.readFile(this.file,"UTF-8",(function(e,i){t(e,i)}))},t}(),r=i(4);new(function(){function t(t){this.file=t,this.code=[]}return t.prototype.readAST=function(t){for(var e=0,i=t;e<i.length;e++){var s=i[e];s.value.trim().endsWith(":")&&s.children.length>0?(this.code.push(s.value+" {"),this.readAST(s.children),this.code.push("}")):this.code.push(s.value)}},t.prototype.parse=function(){var t=this;new n(this.file).read((function(e,i){if(e)throw e;i=i.split(/\r?\n/g).join("\n");var s=r.parse(i);for(var n in t.readAST(s.children),t.code.unshift("module.exports = {"),t.code.push("}"),t.code){var o=t.code[n],h=(o.split(" ").filter((function(t){return""!==t})),{SCHEME:["scheme","schema"],GROUP:"group"}),u=void 0;if(o.endsWith("{"))for(var a in h){Array.isArray(h[a])||(h[a]=[h[a]]);for(var l=0,c=h[a];l<c.length;l++){var f=c[l];o.match(new RegExp(f))&&(u=o.split(f).join("").trim().match(/.*?(?=:)/)[0],o='"'+u+'": {')}}if(o.match(/#.*/)&&(o=o.replace("#","//")),o.trim().startsWith("-")&&(o=o.slice(1,o.length).trim().split(/\/\/.*/).join("").trim()).includes("=>")){var d=o.split("=>"),p=d[0].trim(),b=d[1].trim();console.log(p,b)}}}))},t}())("tests/db").parse()},function(t,e){t.exports=require("assert")},function(t,e){t.exports={INDENT:t=>({type:"INDENT",value:t}),DEDENT:t=>({type:"DEDENT",value:t}),EXPR:t=>({type:"EXPR",value:t})}},function(t,e,i){var s=i(5);t.exports={parse:function(t,e){return new s(e).parse(t)}}},function(t,e,i){var s=i(2),n=i(6);i(3);class r{constructor(t){this.value=t}set indent(t){this._indent=t,this.children=[]}get indent(){return this._indent}add(t,e){this.children.push(e(t))}getLines(){const t=function(){let t="";for(let e=0;e<this._indent;e++)t+=" ";return t}.bind(this)();let e=[this.value];if(!this.children)return e;for(let i of this.children)e=e.concat(i.getLines().map(e=>t+e));return e}toSource(){return this.getLines().join("\n")}}class o extends r{constructor(){super(null),this.children=[]}getLines(){let t=[];for(let e of this.children)t=t.concat(e.getLines());return t}toSource(){return this.getLines().join("\n")}toString(){return JSON.stringify(children)}}class h{constructor(t){this.replaceNode=t.replaceNode||function(t){return t},this.root=new o,this.lastNode=this.root,this.nodeStack=[this.root]}getTree(){return this.root}parse(t){for(let e of t)"EXPR"==e.type?(this.lastNode=new r(e.value),this.nodeStack[0].add(this.lastNode,this.replaceNode)):"INDENT"==e.type?(this.lastNode.indent=e.value,this.nodeStack.unshift(this.lastNode)):"DEDENT"==e.type&&(s(this.nodeStack[0].indent===e.value),this.nodeStack.shift())}finish(){}}t.exports=class{constructor(t){this.options=t||{},this.lexer=new n(t)}parse(t){let e=this.lexer.lex(t),i=new h(this.options);return i.parse(e),i.finish(),i.getTree()}}},function(t,e,i){var s=i(2),n=i(3);class r{constructor(t){this.str=t;let e=/(^\t+$|^ +$)/m.exec(t);s(null!==e,"Invalid indentation unit: Must be tabs xor spaces"),this.basechar=e[1][0],this.notbasechar=" "===e[1][0]?"\t":" "}toString(){return String(this.str)}}class o{constructor(t){this._array=t,this._sum=0;for(let t=0;t<this._array.length;t++)this._sum+=this._array[t]}push(t){this._array.push(t),this._sum+=t}pop(){let t=this._array.pop();return this._sum-=t,t}sum(){return this._sum}}class h{constructor(t){this.buf="",this.indent_buf="",this.indent=new o([0]),this.tabs=0,this.linebreaks=0,this.options=t}static isFormattingLine(t){return 0===t.length||" "===t[0]||"\t"==t[0]}lex(t){let e=[];for(let i of t)if("\n"===i)if(h.isFormattingLine(this.buf))this.options.linebreaks&&(this.linebreaks+=1),this.buf="",this.tabs=0;else{if(this.tabs<this.indent.sum()){for(;this.tabs<this.indent.sum();)e.push(n.DEDENT(this.indent.pop()));for(let t=0;t<this.linebreaks;t++)e.push(n.EXPR(""))}else if(this.tabs>this.indent.sum()){for(let t=0;t<this.linebreaks;t++)e.push(n.EXPR(""));let t=this.tabs-this.indent.sum();this.indent.push(t),e.push(n.INDENT(t))}else for(let t=0;t<this.linebreaks;t++)e.push(n.EXPR(""));s(this.tabs===this.indent.sum(),"Lexer: Indentation Error: Inconsistent indentation levels"),e.push(n.EXPR(this.buf)),this.linebreaks=0,this.tabs=0,this.buf=""}else if(""===this.buf&&i===this.options.indent.basechar)this.indent_buf+=i,this.indent_buf===this.options.indent.str&&(this.tabs+=1,this.indent_buf="");else{if(""===this.buf&&i===this.options.indent.notbasechar)throw new Error("Lexer: Cannot mix tabs and spaces");this.buf+=i}return e}finish(){this.options.linebreaks=!1;let t=this.lex("\n");for(;this.indent.sum()>0;)t.push(n.DEDENT(this.indent.pop()));return this.finished=!0,t}debug(){console.log(""),console.log("buf: "+JSON.stringify(this.buf)),console.log("indent: "+JSON.stringify(this.indent)),console.log("tabs: "+this.tabs),console.log("linebreaks: "+this.linebreaks),console.log("")}}t.exports=class{constructor(t){this.options=t||{},this.options.linebreaks=this.options.linebreaks||!1,this.options.indent=this.options.indent||" ",this.options.indent=new r(this.options.indent)}lex(t){let e=Object.assign({},this.options),i=new h(e);return i.lex(t).concat(i.finish())}}}]);